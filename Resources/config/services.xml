<?xml version="1.0" ?>
<!--

This file is part of the silpion/logger-extra-bundle package.

(c) Julius Beckmann <beckmann@silpion.de>

For the full copyright and license information, please view the LICENSE
file that was distributed with this source code.

-->
<container xmlns="http://symfony.com/schema/dic/services"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <parameters>

        <!-- Secret used for this logger. Will be changed by SilpionLoggerExtraExtension. -->
        <parameter key="silpion_logger_extra.secret" />

        <parameter key="silpion_logger_extra.class">Silpion\LoggerExtraBundle\Logger</parameter>

        <parameter key="silpion_logger_extra.logger.processor.request_id.class">Silpion\LoggerExtraBundle\Logger\Processor\RequestIdProcessor</parameter>
        <parameter key="silpion_logger_extra.logger.provider.request_id.class">Silpion\LoggerExtraBundle\Logger\Provider\Request\UniqRequestIdProvider</parameter>

        <parameter key="silpion_logger_extra.logger.processor.session_id.class">Silpion\LoggerExtraBundle\Logger\Processor\SessionIdProcessor</parameter>
        <parameter key="silpion_logger_extra.logger.provider.session_id.class">Silpion\LoggerExtraBundle\Logger\Provider\Session\SymfonySessionIdProvider</parameter>
        <parameter key="silpion_logger_extra.logger.provider.session_id.session_start">false</parameter>

        <parameter key="silpion_logger_extra.logger.processor.process_id.class">Silpion\LoggerExtraBundle\Logger\Processor\ProcessIdProcessor</parameter>

        <parameter key="silpion_logger_extra.logger.processor.additions.class">Silpion\LoggerExtraBundle\Logger\Processor\AdditionsProcessor</parameter>

        <parameter key="silpion_logger_extra.logger.request.class">Silpion\LoggerExtraBundle\Logger\Request\BasicRequestLogger</parameter>
        <parameter key="silpion_logger_extra.listener.request.class">Silpion\LoggerExtraBundle\EventListener\KernelRequestListener</parameter>
        <parameter key="silpion_logger_extra.logger.request.level">info</parameter>

        <parameter key="silpion_logger_extra.logger.response.class">Silpion\LoggerExtraBundle\Logger\Response\BasicResponseLogger</parameter>
        <parameter key="silpion_logger_extra.listener.response.class">Silpion\LoggerExtraBundle\EventListener\KernelResponseListener</parameter>
        <parameter key="silpion_logger_extra.logger.response.level">info</parameter>

    </parameters>

    <services>

        <!--
            Info:
            Some of these services will do nothing, except they have been tagged
            by SilpionLoggerExtraExtension as a monolog processor or a kernel event listener.
        -->

        <!-- Internal aliases, so they can be changed externally. -->
        <service id="silpion_logger_extra.logger" alias="logger" public="false"/>
        <service id="silpion_logger_extra.session" alias="session" public="false"/>


        <!-- Facade of this bundle -->

        <service id="silpion_logger_extra" class="%silpion_logger_extra.class%">
            <argument type="service" id="silpion_logger_extra.logger.provider.request_id" />
            <argument type="service" id="silpion_logger_extra.logger.provider.session_id" />
        </service>


        <!-- RequestId -->

        <service id="silpion_logger_extra.logger.processor.request_id" class="%silpion_logger_extra.logger.processor.request_id.class%">
            <argument type="service" id="silpion_logger_extra.logger.provider.request_id" />
        </service>

        <service id="silpion_logger_extra.logger.provider.request_id" class="%silpion_logger_extra.logger.provider.request_id.class%" />


        <!-- SessionId -->

        <service id="silpion_logger_extra.logger.processor.session_id" class="%silpion_logger_extra.logger.processor.session_id.class%">
            <argument type="service" id="silpion_logger_extra.logger.provider.session_id" />
        </service>

        <service id="silpion_logger_extra.logger.provider.session_id" class="%silpion_logger_extra.logger.provider.session_id.class%">
            <argument type="service" id="silpion_logger_extra.session"/>
            <argument>%silpion_logger_extra.secret%</argument>
            <argument>%silpion_logger_extra.logger.provider.session_id.session_start%</argument>
        </service>


        <!-- ProcessId -->

        <service id="silpion_logger_extra.logger.processor.process_id" class="%silpion_logger_extra.logger.processor.process_id.class%" />


        <!-- Additions -->

        <service id="silpion_logger_extra.logger.processor.additions" class="%silpion_logger_extra.logger.processor.additions.class%">
            <argument type="collection" /> <!-- Map of key => value. Will be replaced by SilpionLoggerExtraExtension. -->
        </service>


        <!-- RequestLogger -->

        <!-- Service for handling the creation of logs for given request. -->
        <service id="silpion_logger_extra.logger.request" class="%silpion_logger_extra.logger.request.class%">
            <argument type="service" id="silpion_logger_extra.logger" />
            <argument type="string">%silpion_logger_extra.logger.request.level%</argument>
        </service>

        <!-- Eventlistener fetching the incoming request and forwarding to the request logger above. -->
        <service id="silpion_logger_extra.listener.request" class="%silpion_logger_extra.listener.request.class%">
            <argument type="service" id="silpion_logger_extra.logger.request" />
        </service>


        <!-- ResponseLogger -->

        <!-- Service for handling the creation of logs for given response of request. -->
        <service id="silpion_logger_extra.logger.response" class="%silpion_logger_extra.logger.response.class%">
            <argument type="service" id="silpion_logger_extra.logger" />
            <argument type="string">%silpion_logger_extra.logger.response.level%</argument>
        </service>

        <!-- Eventlistener fetching the incoming request and forwarding to the request logger above. -->
        <service id="silpion_logger_extra.listener.response" class="%silpion_logger_extra.listener.response.class%">
            <argument type="service" id="silpion_logger_extra.logger.response" />
        </service>

    </services>

</container>
